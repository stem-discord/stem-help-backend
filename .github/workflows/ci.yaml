name: CI
on: ["push"]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: fetch heads and origin head
        run: git fetch origin main && git fetch origin HEAD && git remote set-head origin main

      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.nvm.outputs.NVMRC }}

      - name: yarn install --frozen-lockfile
        run: yarn install --frozen-lockfile

      - name: run lint
        uses: wearerequired/lint-action@v1.7.0
        continue-on-error: true
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          eslint: true
          auto_fix: true

      - name: initiate mongo
        uses: supercharge/mongodb-github-action@1.3.0
        with:
          mongodb-version: 4.4.2
      
      - name: Load mongo
        run: npm run mongoreset -- mongodb://127.0.0.1:27017/database-test

      - name: initialize with default configs
        run: npm run setup
        env:
          PORT: 4000

      - name: run scripts (nothing should error)
        run: >
          npm run help:env &&
          npm run benchmark &&
          npm run mongodump mongodb://127.0.0.1:27017/database-test

      - name: run 0 config
        run: npm test

      - name: run locov
        run: npm run locov
        env:
          DISCORD_CLIENT_SECRET: ${{ secrets.DISCORD_CLIENT_SECRET }}
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
          MONGODB_URL: mongodb://127.0.0.1:27017/database-test
          STEM_INFORMATION_URL: mongodb://127.0.0.1:27017/information-test
          PORT: 4000
          LOGGING_ABSOLUTE: "true"

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      
  sandbox-deploy:
    needs: build
    runs-on: self-hosted
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Clean Git Repository
        run:
          git clean -X -n --exclude="!node_modules" &&
          git reset --hard HEAD
        continue-on-error: true

      - name: Set node version
        run: alias node='n use latest'

      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
        # My poor raspberry pi needs to survive. No more disk stuff
         clean: false

      - name: curl latest database and restore
        run:
          curl https://mod.stem.help/backup/4/b3d5b82e81b9c5e19786506f0458e320865423d7 -o mongod.temp && 
          mongorestore --drop --gzip --archive="mongod.temp" --nsFrom "information-sanitized.*" --nsTo "information.*" && 
          rm mongod.temp
      - name: fetch heads and origin head
        run: git fetch origin main && git fetch origin HEAD && git remote set-head origin main
      - name: yarn install --frozen-lockfile (I believe yarn)
        run: yarn install --frozen-lockfile
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
          PUPPETEER_EXECUTABLE_PATH: which chromium
      - run: npm run build 
      - run: npm run setup
      - run: npm run clearcache

      - run: " > .env"
      - run: echo "CORS=true" > .env
      - run: echo "FRONTEND_URL=http://localhost:8080" >> .env
      - run: echo "MONGODB_URL=mongodb://127.0.0.1:27017/stem-backend-db" >> .env
      - run: echo "DISCORD_BOT_TOKEN=${{ secrets.SANDBOX_DISCORD_BOT_TOKEN }}" >> .env
      - run: echo "STEM_INFORMATION_URL=mongodb://127.0.0.1:27017/information" >> .env
      - run: echo "CONNECTIONS=\"mongo,discordgql,stem,discord\"" >> .env

      - run: " > .discordbot.env"
      - run: echo "DISCORD_BOT_TOKEN=${{ secrets.SANDBOX_DISCORD_BOT_TOKEN }}" >> .discordbot.env
      - run: echo "APPLICATION_ENV=.discordbot" >> .discordbot.env
      - run: echo "MONGODB_URL=mongodb://127.0.0.1:27017/discord-api-server" >> .discordbot.env
      - run: pm2 restart ecosystem.config.json

